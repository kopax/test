import SiteAccess from './SiteAccess';

/**
 * @public
 * @class
 * @description A site function are feature for site service.
 * It it is designed to be attached to one Kopaxgroup API SiteService.
 * @param {number} id - The site function iddentifier
 * @param {SiteService} siteService - The parent site service
 * @param {object} [config={}] - The site function configuration object
 * @param {object} [ra={}] - react-admin configuration object
 * @param {object} ra.makeResourcesRoutes - A function that create the resources routes
 * @param {object} ra.makeCustomRoutes - A function that create the custom routes
 * @param {object} ra.makeRouteConfig - A function that return the routes configuration
 * @param {function} ra.makeCustomReducers - custom reducers
 * @param {object} config.roles - The roles object for the site service
 * @example
 * const siteService = new SiteService(1, { role: { AUTH: 1 } });
 * new SiteFunction(10, siteService, { role: { SOMETHING: 10 } });
 */
export default class SiteFunction extends SiteAccess {
  constructor(id, siteService, config = {}, ra = {}) {
    super(id, config, ra);
    this.siteService = siteService;
    this.siteService.addSiteFunction(this);
  }
}
